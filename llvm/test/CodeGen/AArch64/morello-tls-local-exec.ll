; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mtriple=arm64-none-linux-gnu -mattr=+morello,+c64 -target-abi purecap -verify-machineinstrs -tls-size=12 < %s | FileCheck %s --check-prefix=CHECK-12
; RUN: llc -mtriple=arm64-none-linux-gnu -mattr=+morello,+c64 -target-abi purecap -verify-machineinstrs -code-model=tiny -tls-size=24 < %s | FileCheck %s --check-prefix=CHECK-24
; RUN: llc -mtriple=arm64-none-linux-gnu -mattr=+morello,+c64 -target-abi purecap -verify-machineinstrs -code-model=small -tls-size=32 < %s | FileCheck %s --check-prefix=CHECK-32
; RUN: llc -mtriple=arm64-none-linux-gnu -mattr=+morello,+c64 -target-abi purecap -verify-machineinstrs -code-model=large -tls-size=48 < %s | FileCheck %s --check-prefix=CHECK-48
;
; Test the maximum TLS size for each code model (fallback to a smaller size from the specified size)
; RUN: llc -mtriple=arm64-none-linux-gnu -mattr=+morello,+c64 -target-abi purecap -verify-machineinstrs -tls-size=32 < %s | FileCheck %s --check-prefix=CHECK-32
; RUN: llc -mtriple=arm64-none-linux-gnu -mattr=+morello,+c64 -target-abi purecap -verify-machineinstrs -code-model=tiny -tls-size=32 < %s | FileCheck %s --check-prefix=CHECK-24
; RUN: llc -mtriple=arm64-none-linux-gnu -mattr=+morello,+c64 -target-abi purecap -verify-machineinstrs -code-model=small -tls-size=48 < %s | FileCheck %s --check-prefix=CHECK-32
;
; Test the default TLS size for each code model
; RUN: llc -mtriple=arm64-none-linux-gnu -mattr=+morello,+c64 -target-abi purecap -verify-machineinstrs < %s | FileCheck --check-prefix=CHECK-24 %s
; RUN: llc -mtriple=arm64-none-linux-gnu -mattr=+morello,+c64 -target-abi purecap -verify-machineinstrs -code-model=tiny < %s | FileCheck %s --check-prefix=CHECK-24
; RUN: llc -mtriple=arm64-none-linux-gnu -mattr=+morello,+c64 -target-abi purecap -verify-machineinstrs -code-model=small < %s | FileCheck %s --check-prefix=CHECK-24
; RUN: llc -mtriple=arm64-none-linux-gnu -mattr=+morello,+c64 -target-abi purecap -verify-machineinstrs -code-model=large < %s | FileCheck %s --check-prefix=CHECK-24

@local_exec_var = external thread_local(localexec) addrspace(200) global i32

define i32 @test_local_exec() addrspace(200) {
; CHECK-12-LABEL: test_local_exec:
; CHECK-12:       .Lfunc_begin0:
; CHECK-12-NEXT:    .cfi_startproc purecap
; CHECK-12-NEXT:  // %bb.0:
; CHECK-12-NEXT:    movz x8, #:size_g0:local_exec_var
; CHECK-12-NEXT:    mrs c0, CTPIDR_EL0
; CHECK-12-NEXT:    add c0, c0, :tprel_lo12:local_exec_var
; CHECK-12-NEXT:    scbnds c0, c0, x8
; CHECK-12-NEXT:    ldr w0, [c0]
; CHECK-12-NEXT:    ret c30
;
; CHECK-24-LABEL: test_local_exec:
; CHECK-24:       .Lfunc_begin0:
; CHECK-24-NEXT:    .cfi_startproc purecap
; CHECK-24-NEXT:  // %bb.0:
; CHECK-24-NEXT:    movz x8, #:size_g1:local_exec_var
; CHECK-24-NEXT:    mrs c0, CTPIDR_EL0
; CHECK-24-NEXT:    movk x8, #:size_g0_nc:local_exec_var
; CHECK-24-NEXT:    add c0, c0, :tprel_hi12:local_exec_var
; CHECK-24-NEXT:    add c0, c0, :tprel_lo12_nc:local_exec_var
; CHECK-24-NEXT:    scbnds c0, c0, x8
; CHECK-24-NEXT:    ldr w0, [c0]
; CHECK-24-NEXT:    ret c30
;
; CHECK-32-LABEL: test_local_exec:
; CHECK-32:       .Lfunc_begin0:
; CHECK-32-NEXT:    .cfi_startproc purecap
; CHECK-32-NEXT:  // %bb.0:
; CHECK-32-NEXT:    movz x8, #:tprel_g1:local_exec_var
; CHECK-32-NEXT:    movz x9, #:size_g1:local_exec_var
; CHECK-32-NEXT:    movk x8, #:tprel_g0_nc:local_exec_var
; CHECK-32-NEXT:    movk x9, #:size_g0_nc:local_exec_var
; CHECK-32-NEXT:    mrs c0, CTPIDR_EL0
; CHECK-32-NEXT:    add c0, c0, x8, uxtx
; CHECK-32-NEXT:    scbnds c0, c0, x9
; CHECK-32-NEXT:    ldr w0, [c0]
; CHECK-32-NEXT:    ret c30
;
; CHECK-48-LABEL: test_local_exec:
; CHECK-48:       .Lfunc_begin0:
; CHECK-48-NEXT:    .cfi_startproc purecap
; CHECK-48-NEXT:  // %bb.0:
; CHECK-48-NEXT:    movz x8, #:tprel_g2:local_exec_var
; CHECK-48-NEXT:    movz x9, #:size_g2:local_exec_var
; CHECK-48-NEXT:    movk x8, #:tprel_g1_nc:local_exec_var
; CHECK-48-NEXT:    movk x9, #:size_g1_nc:local_exec_var
; CHECK-48-NEXT:    movk x8, #:tprel_g0_nc:local_exec_var
; CHECK-48-NEXT:    movk x9, #:size_g0_nc:local_exec_var
; CHECK-48-NEXT:    mrs c0, CTPIDR_EL0
; CHECK-48-NEXT:    add c0, c0, x8, uxtx
; CHECK-48-NEXT:    scbnds c0, c0, x9
; CHECK-48-NEXT:    ldr w0, [c0]
; CHECK-48-NEXT:    ret c30
  %val = load i32, i32 addrspace(200)* @local_exec_var
  ret i32 %val
}

define i32 addrspace(200)* @test_local_exec_addr() addrspace(200) {
; CHECK-12-LABEL: test_local_exec_addr:
; CHECK-12:       .Lfunc_begin1:
; CHECK-12-NEXT:    .cfi_startproc purecap
; CHECK-12-NEXT:  // %bb.0:
; CHECK-12-NEXT:    movz x8, #:size_g0:local_exec_var
; CHECK-12-NEXT:    mrs c0, CTPIDR_EL0
; CHECK-12-NEXT:    add c0, c0, :tprel_lo12:local_exec_var
; CHECK-12-NEXT:    scbnds c0, c0, x8
; CHECK-12-NEXT:    ret c30
;
; CHECK-24-LABEL: test_local_exec_addr:
; CHECK-24:       .Lfunc_begin1:
; CHECK-24-NEXT:    .cfi_startproc purecap
; CHECK-24-NEXT:  // %bb.0:
; CHECK-24-NEXT:    movz x8, #:size_g1:local_exec_var
; CHECK-24-NEXT:    mrs c0, CTPIDR_EL0
; CHECK-24-NEXT:    movk x8, #:size_g0_nc:local_exec_var
; CHECK-24-NEXT:    add c0, c0, :tprel_hi12:local_exec_var
; CHECK-24-NEXT:    add c0, c0, :tprel_lo12_nc:local_exec_var
; CHECK-24-NEXT:    scbnds c0, c0, x8
; CHECK-24-NEXT:    ret c30
;
; CHECK-32-LABEL: test_local_exec_addr:
; CHECK-32:       .Lfunc_begin1:
; CHECK-32-NEXT:    .cfi_startproc purecap
; CHECK-32-NEXT:  // %bb.0:
; CHECK-32-NEXT:    movz x8, #:tprel_g1:local_exec_var
; CHECK-32-NEXT:    movz x9, #:size_g1:local_exec_var
; CHECK-32-NEXT:    movk x8, #:tprel_g0_nc:local_exec_var
; CHECK-32-NEXT:    movk x9, #:size_g0_nc:local_exec_var
; CHECK-32-NEXT:    mrs c0, CTPIDR_EL0
; CHECK-32-NEXT:    add c0, c0, x8, uxtx
; CHECK-32-NEXT:    scbnds c0, c0, x9
; CHECK-32-NEXT:    ret c30
;
; CHECK-48-LABEL: test_local_exec_addr:
; CHECK-48:       .Lfunc_begin1:
; CHECK-48-NEXT:    .cfi_startproc purecap
; CHECK-48-NEXT:  // %bb.0:
; CHECK-48-NEXT:    movz x8, #:tprel_g2:local_exec_var
; CHECK-48-NEXT:    movz x9, #:size_g2:local_exec_var
; CHECK-48-NEXT:    movk x8, #:tprel_g1_nc:local_exec_var
; CHECK-48-NEXT:    movk x9, #:size_g1_nc:local_exec_var
; CHECK-48-NEXT:    movk x8, #:tprel_g0_nc:local_exec_var
; CHECK-48-NEXT:    movk x9, #:size_g0_nc:local_exec_var
; CHECK-48-NEXT:    mrs c0, CTPIDR_EL0
; CHECK-48-NEXT:    add c0, c0, x8, uxtx
; CHECK-48-NEXT:    scbnds c0, c0, x9
; CHECK-48-NEXT:    ret c30
  ret i32 addrspace(200)* @local_exec_var
}
