; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mtriple=arm64-none-linux-gnu -mattr=+c64 -target-abi purecap -relocation-model=pic \
; RUN:        -verify-machineinstrs -aarch64-elf-ldtls-generation=true < %s | \
; RUN:   FileCheck %s --check-prefix=PIC
; RUN: llc -mtriple=arm64-none-linux-gnu -mattr=+c64 -target-abi purecap -verify-machineinstrs < %s \
; RUN:        -aarch64-elf-ldtls-generation=true | FileCheck %s --check-prefix=NOPIC

target datalayout = "e-m:e-i64:64-i128:128-n32:64-S128-pf200:128:128-A200-P200-G200"

@general_dynamic_var = external thread_local addrspace(200) global i32

define i32 @test_generaldynamic() {
; PIC-LABEL: test_generaldynamic:
; PIC:       .Lfunc_begin0:
; PIC-NEXT:    .cfi_startproc purecap
; PIC-NEXT:  // %bb.0:
; PIC-NEXT:    str c30, [csp, #-16]! // 16-byte Folded Spill
; PIC-NEXT:    .cfi_def_cfa_offset 16
; PIC-NEXT:    .cfi_offset c30, -16
; PIC-NEXT:    mrs c2, CTPIDR_EL0
; PIC-NEXT:    adrp c0, :tlsdesc:general_dynamic_var
; PIC-NEXT:    ldr c1, [c0, :tlsdesc_lo12:general_dynamic_var]
; PIC-NEXT:    add c0, c0, :tlsdesc_lo12:general_dynamic_var
; PIC-NEXT:    nop
; PIC-NEXT:    .tlsdesccall general_dynamic_var
; PIC-NEXT:    blr c1
; PIC-NEXT:    ldr w0, [c0]
; PIC-NEXT:    ldr c30, [csp], #16 // 16-byte Folded Reload
; PIC-NEXT:    ret c30
;
; NOPIC-LABEL: test_generaldynamic:
; NOPIC:       .Lfunc_begin0:
; NOPIC-NEXT:    .cfi_startproc purecap
; NOPIC-NEXT:  // %bb.0:
; NOPIC-NEXT:    adrp c0, :gottprel:general_dynamic_var
; NOPIC-NEXT:    add c0, c0, :gottprel_lo12:general_dynamic_var
; NOPIC-NEXT:    ldp x0, x8, [c0]
; NOPIC-NEXT:    mrs c1, CTPIDR_EL0
; NOPIC-NEXT:    add c0, c1, x0, uxtx
; NOPIC-NEXT:    scbnds c0, c0, x8
; NOPIC-NEXT:    ldr w0, [c0]
; NOPIC-NEXT:    ret c30
  %val = load i32, i32 addrspace(200)* @general_dynamic_var
  ret i32 %val
}

define i32 addrspace(200)* @test_generaldynamic_addr() {
; PIC-LABEL: test_generaldynamic_addr:
; PIC:       .Lfunc_begin1:
; PIC-NEXT:    .cfi_startproc purecap
; PIC-NEXT:  // %bb.0:
; PIC-NEXT:    str c30, [csp, #-16]! // 16-byte Folded Spill
; PIC-NEXT:    .cfi_def_cfa_offset 16
; PIC-NEXT:    .cfi_offset c30, -16
; PIC-NEXT:    mrs c2, CTPIDR_EL0
; PIC-NEXT:    adrp c0, :tlsdesc:general_dynamic_var
; PIC-NEXT:    ldr c1, [c0, :tlsdesc_lo12:general_dynamic_var]
; PIC-NEXT:    add c0, c0, :tlsdesc_lo12:general_dynamic_var
; PIC-NEXT:    nop
; PIC-NEXT:    .tlsdesccall general_dynamic_var
; PIC-NEXT:    blr c1
; PIC-NEXT:    ldr c30, [csp], #16 // 16-byte Folded Reload
; PIC-NEXT:    ret c30
;
; NOPIC-LABEL: test_generaldynamic_addr:
; NOPIC:       .Lfunc_begin1:
; NOPIC-NEXT:    .cfi_startproc purecap
; NOPIC-NEXT:  // %bb.0:
; NOPIC-NEXT:    adrp c0, :gottprel:general_dynamic_var
; NOPIC-NEXT:    add c0, c0, :gottprel_lo12:general_dynamic_var
; NOPIC-NEXT:    ldp x0, x8, [c0]
; NOPIC-NEXT:    mrs c1, CTPIDR_EL0
; NOPIC-NEXT:    add c0, c1, x0, uxtx
; NOPIC-NEXT:    scbnds c0, c0, x8
; NOPIC-NEXT:    ret c30
  ret i32 addrspace(200)* @general_dynamic_var

}

@local_dynamic_var = external thread_local(localdynamic) addrspace(200) global i32

; For now we're using general dynamic for local dynamic as well.
define i32 @test_localdynamic() {
; PIC-LABEL: test_localdynamic:
; PIC:       .Lfunc_begin2:
; PIC-NEXT:    .cfi_startproc purecap
; PIC-NEXT:  // %bb.0:
; PIC-NEXT:    str c30, [csp, #-16]! // 16-byte Folded Spill
; PIC-NEXT:    .cfi_def_cfa_offset 16
; PIC-NEXT:    .cfi_offset c30, -16
; PIC-NEXT:    mrs c2, CTPIDR_EL0
; PIC-NEXT:    movz x8, #:size_g1:local_dynamic_var
; PIC-NEXT:    movk x8, #:size_g0_nc:local_dynamic_var
; PIC-NEXT:    adrp c0, :tlsdesc:_TLS_MODULE_BASE_
; PIC-NEXT:    ldr c1, [c0, :tlsdesc_lo12:_TLS_MODULE_BASE_]
; PIC-NEXT:    add c0, c0, :tlsdesc_lo12:_TLS_MODULE_BASE_
; PIC-NEXT:    nop
; PIC-NEXT:    .tlsdesccall _TLS_MODULE_BASE_
; PIC-NEXT:    blr c1
; PIC-NEXT:    add c0, c0, :dtprel_hi12:local_dynamic_var
; PIC-NEXT:    add c0, c0, :dtprel_lo12_nc:local_dynamic_var
; PIC-NEXT:    scbnds c0, c0, x8
; PIC-NEXT:    ldr w0, [c0]
; PIC-NEXT:    ldr c30, [csp], #16 // 16-byte Folded Reload
; PIC-NEXT:    ret c30
;
; NOPIC-LABEL: test_localdynamic:
; NOPIC:       .Lfunc_begin2:
; NOPIC-NEXT:    .cfi_startproc purecap
; NOPIC-NEXT:  // %bb.0:
; NOPIC-NEXT:    adrp c0, :gottprel:local_dynamic_var
; NOPIC-NEXT:    add c0, c0, :gottprel_lo12:local_dynamic_var
; NOPIC-NEXT:    ldp x0, x8, [c0]
; NOPIC-NEXT:    mrs c1, CTPIDR_EL0
; NOPIC-NEXT:    add c0, c1, x0, uxtx
; NOPIC-NEXT:    scbnds c0, c0, x8
; NOPIC-NEXT:    ldr w0, [c0]
; NOPIC-NEXT:    ret c30
  %val = load i32, i32 addrspace(200)* @local_dynamic_var
  ret i32 %val
}

define i32 addrspace(200)* @test_localdynamic_addr() {
; PIC-LABEL: test_localdynamic_addr:
; PIC:       .Lfunc_begin3:
; PIC-NEXT:    .cfi_startproc purecap
; PIC-NEXT:  // %bb.0:
; PIC-NEXT:    str c30, [csp, #-16]! // 16-byte Folded Spill
; PIC-NEXT:    .cfi_def_cfa_offset 16
; PIC-NEXT:    .cfi_offset c30, -16
; PIC-NEXT:    mrs c2, CTPIDR_EL0
; PIC-NEXT:    movz x8, #:size_g1:local_dynamic_var
; PIC-NEXT:    movk x8, #:size_g0_nc:local_dynamic_var
; PIC-NEXT:    adrp c0, :tlsdesc:_TLS_MODULE_BASE_
; PIC-NEXT:    ldr c1, [c0, :tlsdesc_lo12:_TLS_MODULE_BASE_]
; PIC-NEXT:    add c0, c0, :tlsdesc_lo12:_TLS_MODULE_BASE_
; PIC-NEXT:    nop
; PIC-NEXT:    .tlsdesccall _TLS_MODULE_BASE_
; PIC-NEXT:    blr c1
; PIC-NEXT:    add c0, c0, :dtprel_hi12:local_dynamic_var
; PIC-NEXT:    add c0, c0, :dtprel_lo12_nc:local_dynamic_var
; PIC-NEXT:    scbnds c0, c0, x8
; PIC-NEXT:    ldr c30, [csp], #16 // 16-byte Folded Reload
; PIC-NEXT:    ret c30
;
; NOPIC-LABEL: test_localdynamic_addr:
; NOPIC:       .Lfunc_begin3:
; NOPIC-NEXT:    .cfi_startproc purecap
; NOPIC-NEXT:  // %bb.0:
; NOPIC-NEXT:    adrp c0, :gottprel:local_dynamic_var
; NOPIC-NEXT:    add c0, c0, :gottprel_lo12:local_dynamic_var
; NOPIC-NEXT:    ldp x0, x8, [c0]
; NOPIC-NEXT:    mrs c1, CTPIDR_EL0
; NOPIC-NEXT:    add c0, c1, x0, uxtx
; NOPIC-NEXT:    scbnds c0, c0, x8
; NOPIC-NEXT:    ret c30
 ret i32 addrspace(200)* @local_dynamic_var
}

@local_dynamic_var2 = external thread_local(localdynamic) addrspace(200) global i32

define i32 @test_localdynamic_deduplicate() {
; PIC-LABEL: test_localdynamic_deduplicate:
; PIC:       .Lfunc_begin4:
; PIC-NEXT:    .cfi_startproc purecap
; PIC-NEXT:  // %bb.0:
; PIC-NEXT:    str c30, [csp, #-16]! // 16-byte Folded Spill
; PIC-NEXT:    .cfi_def_cfa_offset 16
; PIC-NEXT:    .cfi_offset c30, -16
; PIC-NEXT:    mrs c2, CTPIDR_EL0
; PIC-NEXT:    movz x8, #:size_g1:local_dynamic_var
; PIC-NEXT:    movk x8, #:size_g0_nc:local_dynamic_var
; PIC-NEXT:    adrp c0, :tlsdesc:_TLS_MODULE_BASE_
; PIC-NEXT:    ldr c1, [c0, :tlsdesc_lo12:_TLS_MODULE_BASE_]
; PIC-NEXT:    add c0, c0, :tlsdesc_lo12:_TLS_MODULE_BASE_
; PIC-NEXT:    nop
; PIC-NEXT:    .tlsdesccall _TLS_MODULE_BASE_
; PIC-NEXT:    blr c1
; PIC-NEXT:    movz x9, #:size_g1:local_dynamic_var2
; PIC-NEXT:    add c1, c0, :dtprel_hi12:local_dynamic_var
; PIC-NEXT:    movk x9, #:size_g0_nc:local_dynamic_var2
; PIC-NEXT:    add c0, c0, :dtprel_hi12:local_dynamic_var2
; PIC-NEXT:    add c1, c1, :dtprel_lo12_nc:local_dynamic_var
; PIC-NEXT:    add c0, c0, :dtprel_lo12_nc:local_dynamic_var2
; PIC-NEXT:    scbnds c1, c1, x8
; PIC-NEXT:    scbnds c0, c0, x9
; PIC-NEXT:    ldr w8, [c1]
; PIC-NEXT:    ldr w9, [c0]
; PIC-NEXT:    add w0, w8, w9
; PIC-NEXT:    ldr c30, [csp], #16 // 16-byte Folded Reload
; PIC-NEXT:    ret c30
;
; NOPIC-LABEL: test_localdynamic_deduplicate:
; NOPIC:       .Lfunc_begin4:
; NOPIC-NEXT:    .cfi_startproc purecap
; NOPIC-NEXT:  // %bb.0:
; NOPIC-NEXT:    adrp c0, :gottprel:local_dynamic_var
; NOPIC-NEXT:    add c0, c0, :gottprel_lo12:local_dynamic_var
; NOPIC-NEXT:    ldp x0, x8, [c0]
; NOPIC-NEXT:    adrp c1, :gottprel:local_dynamic_var2
; NOPIC-NEXT:    add c1, c1, :gottprel_lo12:local_dynamic_var2
; NOPIC-NEXT:    ldp x1, x9, [c1]
; NOPIC-NEXT:    mrs c2, CTPIDR_EL0
; NOPIC-NEXT:    add c0, c2, x0, uxtx
; NOPIC-NEXT:    add c1, c2, x1, uxtx
; NOPIC-NEXT:    scbnds c0, c0, x8
; NOPIC-NEXT:    ldr w8, [c0]
; NOPIC-NEXT:    scbnds c1, c1, x9
; NOPIC-NEXT:    ldr w9, [c1]
; NOPIC-NEXT:    add w0, w8, w9
; NOPIC-NEXT:    ret c30
  %val = load i32, i32 addrspace(200)* @local_dynamic_var
  %val2 = load i32, i32 addrspace(200)* @local_dynamic_var2

  %sum = add i32 %val, %val2
  ret i32 %sum
}
