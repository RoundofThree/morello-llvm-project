; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mtriple=aarch64 -mattr=+morello,+c64 -target-abi=purecap-benchmark \
; RUN:     -verify-machineinstrs -relocation-model=pic < %s \
; RUN:     | FileCheck -check-prefixes=CHECK,PIC %s
; RUN: llc -mtriple=aarch64 -mattr=+morello,+c64 -target-abi=purecap-benchmark \
; RUN:     -verify-machineinstrs < %s \
; RUN:     | FileCheck -check-prefixes=CHECK,NOPIC %s

; Check that TLS symbols are lowered correctly based on the specified
; model. Make sure they're external to avoid them all being optimised to Local
; Exec for the executable.

@unspecified = external thread_local addrspace(200) global i32
@ld = external thread_local(localdynamic) addrspace(200) global i32
@ie = external thread_local(initialexec) addrspace(200) global i32
@le = external thread_local(localexec) addrspace(200) global i32


; No model specified

define i32 addrspace(200)* @f1() nounwind {
; PIC-LABEL: f1:
; PIC:       .Lfunc_begin0:
; PIC-NEXT:  // %bb.0: // %entry
; PIC-NEXT:    str c30, [csp, #-16]! // 16-byte Folded Spill
; PIC-NEXT:    mrs c2, CTPIDR_EL0
; PIC-NEXT:    adrp c0, :tlsdesc:unspecified
; PIC-NEXT:    ldr c1, [c0, :tlsdesc_lo12:unspecified]
; PIC-NEXT:    add c0, c0, :tlsdesc_lo12:unspecified
; PIC-NEXT:    nop
; PIC-NEXT:    .tlsdesccall unspecified
; PIC-NEXT:    blr x1
; PIC-NEXT:    ldr c30, [csp], #16 // 16-byte Folded Reload
; PIC-NEXT:    and x30, x30, #0xfffffffffffffffe
; PIC-NEXT:    ret x30
;
; NOPIC-LABEL: f1:
; NOPIC:       .Lfunc_begin0:
; NOPIC-NEXT:  // %bb.0: // %entry
; NOPIC-NEXT:    adrp c0, :gottprel:unspecified
; NOPIC-NEXT:    add c0, c0, :gottprel_lo12:unspecified
; NOPIC-NEXT:    ldp x0, x8, [c0]
; NOPIC-NEXT:    mrs c1, CTPIDR_EL0
; NOPIC-NEXT:    add c0, c1, x0, uxtx
; NOPIC-NEXT:    scbnds c0, c0, x8
; NOPIC-NEXT:    and x30, x30, #0xfffffffffffffffe
; NOPIC-NEXT:    ret x30
entry:
  ret i32 addrspace(200)* @unspecified
}


; localdynamic specified

define i32 addrspace(200)* @f2() nounwind {
; PIC-LABEL: f2:
; PIC:       .Lfunc_begin1:
; PIC-NEXT:  // %bb.0: // %entry
; PIC-NEXT:    str c30, [csp, #-16]! // 16-byte Folded Spill
; PIC-NEXT:    mrs c2, CTPIDR_EL0
; PIC-NEXT:    adrp c0, :tlsdesc:ld
; PIC-NEXT:    ldr c1, [c0, :tlsdesc_lo12:ld]
; PIC-NEXT:    add c0, c0, :tlsdesc_lo12:ld
; PIC-NEXT:    nop
; PIC-NEXT:    .tlsdesccall ld
; PIC-NEXT:    blr x1
; PIC-NEXT:    ldr c30, [csp], #16 // 16-byte Folded Reload
; PIC-NEXT:    and x30, x30, #0xfffffffffffffffe
; PIC-NEXT:    ret x30
;
; NOPIC-LABEL: f2:
; NOPIC:       .Lfunc_begin1:
; NOPIC-NEXT:  // %bb.0: // %entry
; NOPIC-NEXT:    adrp c0, :gottprel:ld
; NOPIC-NEXT:    add c0, c0, :gottprel_lo12:ld
; NOPIC-NEXT:    ldp x0, x8, [c0]
; NOPIC-NEXT:    mrs c1, CTPIDR_EL0
; NOPIC-NEXT:    add c0, c1, x0, uxtx
; NOPIC-NEXT:    scbnds c0, c0, x8
; NOPIC-NEXT:    and x30, x30, #0xfffffffffffffffe
; NOPIC-NEXT:    ret x30
entry:
  ret i32 addrspace(200)* @ld
}


; initialexec specified

define i32 addrspace(200)* @f3() nounwind {
; CHECK-LABEL: f3:
; CHECK:       .Lfunc_begin2:
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    adrp c0, :gottprel:ie
; CHECK-NEXT:    add c0, c0, :gottprel_lo12:ie
; CHECK-NEXT:    ldp x0, x8, [c0]
; CHECK-NEXT:    mrs c1, CTPIDR_EL0
; CHECK-NEXT:    add c0, c1, x0, uxtx
; CHECK-NEXT:    scbnds c0, c0, x8
; CHECK-NEXT:    and x30, x30, #0xfffffffffffffffe
; CHECK-NEXT:    ret x30
entry:
  ret i32 addrspace(200)* @ie
}


; localexec specified

define i32 addrspace(200)* @f4() nounwind {
; CHECK-LABEL: f4:
; CHECK:       .Lfunc_begin3:
; CHECK-NEXT:  // %bb.0: // %entry
; CHECK-NEXT:    mrs c0, CTPIDR_EL0
; CHECK-NEXT:    movz x8, #:size_g1:le
; CHECK-NEXT:    add c0, c0, :tprel_hi12:le
; CHECK-NEXT:    movk x8, #:size_g0_nc:le
; CHECK-NEXT:    add c0, c0, :tprel_lo12_nc:le
; CHECK-NEXT:    scbnds c0, c0, x8
; CHECK-NEXT:    and x30, x30, #0xfffffffffffffffe
; CHECK-NEXT:    ret x30
entry:
  ret i32 addrspace(200)* @le
}
